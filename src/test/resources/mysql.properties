jdbc.url=jdbc:mysql://localhost:3306/public?rewriteBatchedStatements=true&allowLoadLocalInfile=true
jdbc.properties=user=USER,password=PASSWORD
load.dir=/var/lib/mysql-files/
n=1000
table=perf_test
table.pk=perf_test_pk
table.int.index=perf_test_int_idx
table.str.index=perf_test_str_idx
create.table=CREATE TABLE ${TABLE} (id integer, label varchar(64), text varchar(1024))
create.table.pk=CREATE TABLE ${TABLE} (id integer PRIMARY KEY, label varchar(64), text varchar(1024))
create.table.int.index=CREATE TABLE ${TABLE} (id integer, label varchar(64), text varchar(1024), UNIQUE KEY (id), INDEX idx_id (id))
create.table.str.index=CREATE TABLE ${TABLE} (id integer, label varchar(64), text varchar(1024), UNIQUE KEY (label), INDEX idx_label (label))
drop.table=drop table ${TABLE}
insert=insert into ${TABLE} (id, label, text) values (?,?,?)
update=update ${TABLE} set text=? where id=?
upsert.id=insert into ${TABLE} (id, label, text) values (?,?,?) ON DUPLICATE KEY update text=?
upsert.label=insert into ${TABLE} (id, label, text) values (?,?,?) ON DUPLICATE KEY update text=?
upsert=update ${TABLE} set text=? where id=?; INSERT INTO ${TABLE} (id, label, text) SELECT ?,?,? WHERE NOT EXISTS (SELECT id FROM ${TABLE} WHERE id = ?)
# We could use prepared statement here and pass file path using ? placeholder but this does not work with PostgreSQL, so we use string replacement to unify the code.
load=LOAD DATA LOCAL INFILE '${FILE}' INTO TABLE ${TMP-TABLE} IGNORE 1 LINES
merge=UPDATE ${TABLE} t INNER JOIN ${TMP-TABLE} s ON t.id = s.id SET t.label = s.label, t.text = s.text WHERE s.label <> t.label or s.text <> t.text; insert into ${TABLE} (id, label, text) SELECT s.id, s.label, s.text from ${TMP-TABLE} s left join ${TABLE} t on s.id = t.id where t.id is null
